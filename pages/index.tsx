import React, { useCallback, useEffect, useState } from 'react'

import type { NextPage } from 'next'
import Head from 'next/head'

// import Image from "next/image";

import { Card } from '../src/components/card'
import Heading from '../src/components/heading'
import { COMPANIES } from '../src/services/allPlacesWorked'
import RECIPES from '../src/services/recipes.json'

import styles from '../styles/Home.module.scss'

interface IRecords {
  dates: string
  technical: string
  name: string
  position: string
  description: string
  image: string
  colour: string
}

interface IRecipe {
  recipes: {
    name: string;
    description: string;
    ingredients: string[];
    instructions: string[];
    image: string;
  }
}

type allRecords = IRecords[] | IRecipe[]

const Home: NextPage = () => {
  const RECORD_TYPE = process.env.NEXT_PUBLIC_APP_TYPE
  const getRecord = (): any => RECORD_TYPE === 'recipes' ? RECIPES : COMPANIES
  const [website, setWebsite] = useState<string>(RECORD_TYPE ?? '')
  const [records, setRecords] = useState<any>(getRecord())
  // const [allActiveCards, setAllActiveCards] = useState<boolean[]>([])
  // const [activeCard, setActiveCard] = useState(false)
  const reset = () => {
    setRecords(getRecord())
    debugger
  }
  useEffect(() => {
    console.log('records:=>', records)
  }, [records])

  const filterArr = (arr: IRecords[], text: string) => {
    const results = arr.filter((item) => item.name.toLowerCase().includes(text.toLowerCase()))
    return results
  }
  const searchResults = (inputText: string) => {
    const char = filterArr(COMPANIES, inputText)
    console.log('char:', char)
    setRecords(char)
  }
  const searchCallback = useCallback((val: string) => {
    searchResults(val)
  }, [searchResults])
  return (
    <div className={styles.container}>
      <Head>
        <title>Darryn lee-warden</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="/dist/output.css" rel="stylesheet" />
        <link rel="preconnect" href="https://fonts.googleapis.com"></link>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true"></link>
        {/* <link
          href="https://fonts.googleapis.com/css2?family=Zen+Kaku+Gothic+Antique:wght@300&display=swap"
          rel="stylesheet"
        ></link>
        <link
          href="https://fonts.googleapis.com/css2?family=Alegreya+Sans:ital,wght@0,100;0,300;0,800;1,100&display=swap"
          rel="stylesheet"
        ></link> */}
      </Head>

      <main className={styles.main}>
        {/* <button onClick={reset}>reset</button> */}
        <Heading reset={reset} searchCallback={searchCallback} classN="cm-container" />
        {RECORD_TYPE === 'recipes' &&
          RECIPES.recipes[0].name}
        <div className={styles.grid + ' container-home'}>
          {records?.recipes?.length > 1 ? (
            records.recipes.map((recipe: IRecords, index: number) => {
              return <Card key={index} website={website} cardObject={recipe} ind={index} />
            })) : (
            <div style={{ position: 'relative' }}>

              <div className="title" style={{ position: 'absolute', top: '0' }}>hello world</div>
            </div>
          )}
        </div>
        {
          RECORD_TYPE === 'website' &&
          <div className={styles.grid + ' container-home'}>
            {records.length > 1 ? (
              records.map((job: IRecords, index: number) => {
                return <Card key={index} website={website} cardObject={job} ind={index} />
              })) : (
              <div style={{ position: 'relative' }}>
                <img src={`images/${records[0].image}`} style={{ position: 'initial' }} alt={'Picture of the  ' + records[0]?.name} />
                <div className="title" style={{ position: 'absolute', top: '0' }}>hello world</div>
              </div>
            )}
          </div>
        }

      </main>

      <footer className={styles.footer}>
        <p>Darryn lee-warden - creative milk</p>
      </footer>
    </div>
  )
}

export default Home
